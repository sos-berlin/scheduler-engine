<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>engine-kernelcpp</artifactId>
    <parent>
        <groupId>com.sos-berlin.jobscheduler.engine</groupId>
        <artifactId>engine</artifactId>
        <version>1.13.10-SNAPSHOT</version>
    </parent>

    <name>${project.artifactId}</name>
    <inceptionYear>2010</inceptionYear>
    <description>C++-Code der Scheduler-Engine</description>

    <properties>
        <cppConf>Debug Release</cppConf>
        <cppMake>clean-compile</cppMake>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.sos-berlin.jobscheduler.enginedoc</groupId>
                                    <artifactId>enginedoc-common</artifactId>
                                    <version>${enginedoc.version}</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Liefert Versionsbestandteile in ${parsedVersion.xxx}, siehe http://mojo.codehaus.org/build-helper-maven-plugin/parse-version-mojo.html -->
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Generate Java proxies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <killAfter>-1</killAfter>
                            <includeProjectDependencies>false</includeProjectDependencies>
                            <includePluginDependencies>true</includePluginDependencies>
                            <mainClass>com.sos.scheduler.engine.cplusplus.generator.main.Main</mainClass>
                            <arguments>
                                <argument>-c++-output-directory=${basedir}</argument>
                                <argument>-exclude=com.sos.scheduler.engine.kernel.persistence.hibernate</argument>
                                <argument>${scheduler.javaCppProxyPackage}</argument>
                                <argument>com.google.inject.Injector</argument>
                                <argument>com.sos.scheduler.engine.common.xml.XmlUtils</argument>
                                <argument>com.sos.scheduler.engine.data.event.KeyedEvent</argument>
                                <argument>java.lang.Boolean</argument>
                                <argument>java.lang.Class</argument>
                                <argument>java.io.File</argument>
                                <argument>java.net.URI</argument>
                                <argument>java.net.URL</argument>
                                <argument>java.util.List</argument>
                                <argument>java.util.ArrayList</argument>
                                <argument>java.util.HashMap</argument>
                                <argument>org.joda.time.Duration</argument>
                                <argument>org.joda.time.ReadableInstant</argument>
                                <argument>org.w3c.dom.Attr</argument>
                                <argument>org.w3c.dom.CDATASection</argument>
                                <argument>org.w3c.dom.CharacterData</argument>
                                <argument>org.w3c.dom.Comment</argument>
                                <argument>org.w3c.dom.Document</argument>
                                <argument>org.w3c.dom.Element</argument>
                                <argument>org.w3c.dom.Node</argument>
                                <argument>org.w3c.dom.NodeList</argument>
                                <argument>org.w3c.dom.Text</argument>
                                <argument>scala.Option</argument>
                                <argument>scala.util.Try</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--Makes "maven clean" impossible due to "Could not find artifact ...": execution>
                        <id>Clean C++</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <arguments>
                                <arguments>-c</arguments>
                                <arguments>make/make-scheduler-phase clean "${cpuArchitecture}" ${cppConf}</arguments>
                            </arguments>
                        </configuration>
                    </execution-->
                    <execution>
                        <id>Compile C++</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <arguments>
                                <arguments>-c</arguments>
                                <arguments>make/make-scheduler-phase ${cppMake} "${cpuArchitecture}" ${cppConf}</arguments>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <!-- Das wird auch bei clean verlangt, obwohl es nur für generate-sources gebraucht wird.
                        Erstmaliges mvn clean auf Module kann deshalb fehlschlagen. Lösung: mvn clean install. -->
                        <groupId>com.sos-berlin.jobscheduler.engine</groupId>
                        <artifactId>engine-cppjava-generator</artifactId>
                        <version>${project.cplusplusVersion}</version>
                        <scope>compile</scope>
                    </dependency>
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>engine-kernel</artifactId>
                        <version>${project.cplusplusVersion}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- generates a header file with information about the current version -->
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>generated</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/cpp</directory>
                                    <includes>
                                        <include>mavenSettings.h</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classifier>${osArch}</classifier>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-binaries</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/os-${osFamily}.xml</descriptor>
                            </descriptors>
                            <archive>
                                <manifest>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Architechture>${osArch}</Architechture>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>package-test-binaries</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/os-${osFamily}-test.xml</descriptor>
                            </descriptors>
                            <archive>
                                <manifest>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Architechture>${osArch}</Architechture>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <ant antfile="prepare_build.xml" target="all">
                                    <property name="settings.localRepository" value="${settings.localRepository}" />
                                    <property name="operatingSystem" value="${operatingSystem}" />
                                </ant>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>saxon</artifactId>
                        <version>8.7</version>
                    </dependency>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-trax</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.sos-berlin.jobscheduler.enginedoc</groupId>
            <artifactId>enginedoc-common</artifactId>
            <version>${enginedoc.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>

        <profile>
            <id>collect-sources</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>aggregate-cpp-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/assembly/aggregate-sources.xml</descriptor>
                                    </descriptors>
                                    <appendAssemblyId>true</appendAssemblyId>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>kernelcpp.clean.skip</id>
            <!-- Das funktionniert nicht. Es soll die langwierige Neukompilierung des C++-Codes verhindern. -->
            <activation>
                <property>
                    <name>kernelcpp.clean.skip</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <!-- the snapshots of the c++ kernel are deployed to separated repositories each os -->
        <snapshotRepository>
            <id>sos-os</id>
            <name>SOS Snapshot Repository (${osArch})</name>
            <url>${repositoryBase}/sos-os-${osArch}</url>
        </snapshotRepository>
    </distributionManagement>
</project>
