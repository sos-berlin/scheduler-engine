<?xml version="1.0" encoding="utf-8"?>
<!-- Call prepare-setup.sh <version> to use this pom -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>engine-setup</artifactId>
    <parent>
        <groupId>com.sos-berlin.jobscheduler.engine</groupId>
        <artifactId>engine</artifactId>
        <version>1.13.10-SNAPSHOT</version>
    </parent>

    <properties>
        <setup.platform>${osArch}</setup.platform>

        <!-- see http://rterp.wordpress.com/2012/03/16/stamping-version-number-and-build-time-in-properties-file-with-maven/ for details -->
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    </properties>

    <packaging>pom</packaging>
    <name>${project.artifactId}</name>

    <profiles>
        <!-- this profile is for preparing the setup for a given version on a given platform,e.g.
              mvn install -Pprepare-platform -Dengine.platform=windows-x86
        -->
        <profile>
            <id>prepare-platform</id>

            <properties>
                <setup.platform>${engine.platform}</setup.platform>
            </properties>

            <repositories>
                <repository>
                    <id>sos</id>
                    <name>SOS Internal Repository</name>
                    <url>${repositoryBase}/sos</url>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </snapshots>
                </repository>
                <repository>
                    <id>sos-os</id>
                    <name>SOS snapshot Repository (${setup.platform})</name>
                    <url>${repositoryBase}/sos-os-${setup.platform}</url>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                </repository>
            </repositories>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>purge-local-repository</id>
                                <phase>clean</phase>
                                <configuration>
                                    <inherited>false</inherited>
                                    <target name="purge local repository">
                                        <delete dir="${user.home}/.m2/repository//com/sos/scheduler/engine" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>

    </profiles>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>

                    <!-- copy the jar for the JobScheduler engine -->
                    <execution>
                        <id>copy-sos-jar</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler/lib</outputDirectory>
                            <artifactItems>
                                <!-- fat jar mit allen benÃ¶tigten jars der JobScheduler engine (derzeit nicht ausgeliefert) -->
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>engine-jar</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <destFileName>${project.groupId}-${project.version}.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                    <!-- collect 3rd party jars -->
                    <execution>
                        <id>copy-3rdparty</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                           <outputDirectory>${project.build.directory}/setup/scheduler/lib</outputDirectory>
                           <excludeGroupIds>com.sos.scheduler.engine,org.hibernate,org.jboss,dom4j,org.javassist,antlr</excludeGroupIds>
                           <excludeArtifactIds>${artifacts.lib.ignore}</excludeArtifactIds>
                           <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>

                    <execution>
                        <id>unpack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/workspace/scheduler</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.sos-berlin.jobscheduler.enginedoc</groupId>
                                    <artifactId>enginedoc-setup</artifactId>
                                    <version>${enginedoc.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.sos-berlin.jobscheduler.enginedoc</groupId>
                                    <artifactId>enginedoc-common</artifactId>
                                    <version>${enginedoc.version}</version>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                    <execution>
                        <id>unpack-binaries</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/workspace/scheduler.${setup.platform}</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <!-- Plattformspezifischer C++ Kern -->
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>engine-kernelcpp</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>${setup.platform}</classifier>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>

                    <!-- generate the version info file -->
                    <execution>
                        <id>copy-version-info</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler.${setup.platform}/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/templates</directory>
                                    <includes>
                                        <include>.version-engine</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- get the binaries (excluding Unix libraries) -->
                    <execution>
                        <id>copy-binaries</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler.${setup.platform}/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/workspace/scheduler.${setup.platform}/com/sos/scheduler/engine/kernelcpp/bin</directory>
                                    <excludes>
                                        <exclude>*.so</exclude>
                                    </excludes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- get the binaries (for Unix) -->
                    <execution>
                        <id>copy-libraries</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler.${setup.platform}/lib</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/workspace/scheduler.${setup.platform}/com/sos/scheduler/engine/kernelcpp/bin</directory>
                                    <includes>
                                        <include>*.so</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- get the scheduler.xsd -->
                    <execution>
                        <id>copy-xsd</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler/config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/workspace/scheduler/com/sos/scheduler/enginedoc/common</directory>
                                    <includes>
                                        <include>scheduler.xsd</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- get the documentation (german) -->
                    <execution>
                        <id>copy-documenation-de</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler/doc/de/reference</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/workspace/scheduler/enginedoc/doc.de</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- get the documentation (english) -->
                    <execution>
                        <id>copy-documenation-en</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/setup/scheduler/doc/en/reference</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/workspace/scheduler/enginedoc/doc.en</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- output the generated setup structure in a jar file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-setup</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/setup.xml</descriptor>
                            </descriptors>
                            <archive>
                                <manifest>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Architechture>${setup.platform}</Architechture>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>engine-jar</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>engine-kernelcpp</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>engine-kernelcpp</artifactId>
            <version>${project.version}</version>
            <classifier>${setup.platform}</classifier>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <distributionManagement>
        <!-- the snapshots of the setup are deployed to separated repositories each os -->
        <snapshotRepository>
            <id>sos-os</id>
            <name>SOS Snapshot Repository (${osArch})</name>
            <url>${repositoryBase}/sos-os-${osArch}</url>
        </snapshotRepository>
    </distributionManagement>
</project>
